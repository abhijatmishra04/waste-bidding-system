@Bean
public Job collectionLettersJob() {
    return jobBuilderFactory.get("collectionLettersJob")
        .incrementer(new RunIdIncrementer())
        // Step 1: Start with NN3Step
        .start(NN3Step())
        .on(CollectionLettersBatchConstants.COMPLETED).to(NN5Step())
        .on(CollectionLettersBatchConstants.FAILED).fail()
        // Step 2: Move to NN5Step if previous step succeeded
        .from(NN5Step())
        .on(CollectionLettersBatchConstants.COMPLETED).to(NN8Step())
        .on(CollectionLettersBatchConstants.FAILED).fail()
        // Step 3: Move to NN8Step if previous step succeeded
        .from(NN8Step())
        .on(CollectionLettersBatchConstants.COMPLETED).to(NN14Step())
        .on(CollectionLettersBatchConstants.FAILED).fail()
        // Step 4: Move to NN14Step if previous step succeeded
        .from(NN14Step())
        .on(CollectionLettersBatchConstants.COMPLETED).to(NN28Step())
        .on(CollectionLettersBatchConstants.FAILED).fail()
        // Step 5: Move to NN28Step if previous step succeeded
        .from(NN28Step())
        .on(CollectionLettersBatchConstants.COMPLETED).to(NN30Step())
        .on(CollectionLettersBatchConstants.FAILED).fail()
        // Step 6: Move to NN30Step if previous step succeeded
        .from(NN30Step())
        .on(CollectionLettersBatchConstants.COMPLETED).to(letterAggregatorStep())
        .on(CollectionLettersBatchConstants.FAILED).fail()
        // Final Step: End the job if letterAggregatorStep completes successfully
        .from(letterAggregatorStep())
        .on(CollectionLettersBatchConstants.COMPLETED).end()
        .build(); // Add this build() method to finalize the job
}



@Bean
public Job weekendJob() {
    return jobBuilderFactory.get("weekendJob")
        .incrementer(new RunIdIncrementer())
        .start(NN3Step())
        .on(CollectionLettersBatchConstants.COMPLETED).to(NN5Step())
        .on(CollectionLettersBatchConstants.FAILED).fail()
        .from(NN5Step())
        .on(CollectionLettersBatchConstants.COMPLETED).to(NN28Step())
        .on(CollectionLettersBatchConstants.FAILED).fail()
        .from(NN28Step())
        .on(CollectionLettersBatchConstants.COMPLETED).to(NN30Step())
        .on(CollectionLettersBatchConstants.FAILED).fail()
        .from(NN30Step())
        .on(CollectionLettersBatchConstants.COMPLETED).to(letterAggregatorStep())
        .on(CollectionLettersBatchConstants.FAILED).fail()
        .from(letterAggregatorStep())
        .on(CollectionLettersBatchConstants.COMPLETED).end()
        .on(CollectionLettersBatchConstants.FAILED).fail()
        .build();
}
