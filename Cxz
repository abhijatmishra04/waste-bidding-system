Slide Title
POE Batch Job – 8-Digit BIN Enablement

⸻

1 ▪ Business Objective
	•	Enable SST systems to recognise new 8-digit Bank-Identification Numbers (BINs) while retaining full support for existing 6-digit BINs.
	•	Guarantee uninterrupted card authorisation & settlement for Consumer and Small-Business portfolios.

2 ▪ Weekly Execution Snapshot
	•	Trigger: Arrival of POE file ISBP.NDM.POE.ISB.UPLOAD.BINTABLE (fixed-length, LRECL = 50).
	•	Schedule: Autosys file-trigger, every Wednesday 12 – 1 PM CT.
	•	Environments: 1s & 3s LPARs processed in sequence.

3 ▪ High-Level Workflow
	1.	File Validation – Locate file, duplicate check, lock, header/trailer count match.
	2.	Read & Map – Extract key fields (BANK_ID_NO, HOST_NO, ISSUER_NO, etc.).
	3.	Upsert Logic –
	•	Match found  →  UPDATE existing BIN row.
	•	No match  →  INSERT new BIN row.
	4.	Delete Cycle – Identify BINs absent from today’s file, write audit report, bulk-delete obsolete rows.
	5.	Post-Processing – Rename input to .done / .err, archive, Splunk log push.

4 ▪ Outputs & Controls
	•	Database: SST_OWNER.BIN table refreshed (insert, update, delete).
	•	Audit: DeleteBin_<timestamp>.txt with full detail + footer record count.
	•	Logs & Alerts: End-of-batch totals, error summaries, restart checkpoints.

5 ▪ Business Value Delivered
	•	Future-proofs BIN processing ahead of Visa/Mastercard mandate.
	•	Mirrors legacy mainframe jobs ISBD1BUP / ISBD0BUP while adding modern safeguards (duplicate lock, chunk commits, restartability).
	•	Zero downstream impact—ESB programs consume the same BIN table seamlessly.
