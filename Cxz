@Override
public void write(List<? extends PoeBinDto> items) throws Exception {
    // … existing timestamp extraction …

    for (PoeBinDto dto : items) {
        if (dto.isContains()) {
            // ----- UPDATE PATH -----
            Object[] updateParams = new Object[] {
                // 1–6: our constant fields
                dto.getBinEffTs(),           // DEFAULT_BIN_EFF_TS
                dto.getBinExprTs(),          // DEFAULT_BIN_EXPR_TS
                dto.getBinAprvIn(),          // DEFAULT_SPACES
                dto.getPrinBnkNoLenCt(),     // DEFAULT_ZERO
                dto.getAcsmedNoLenCt(),      // DEFAULT_ZERO
                // no placeholder for LAST_UPDATE_TS (CURRENT TIMESTAMP)
                // 7–8: more constants
                dto.getMbnaOwnershipIn(),    // DEFAULT_SPACES
                dto.getMbnaTechIn(),         // DEFAULT_SPACES

                // 9–16: the “real” fields you were already binding
                dto.getHostNo(),
                dto.getIssuerNo(),
                dto.getProdBrndNo(),
                dto.getBusLineTpNo(),
                dto.getProdBrndRgnCd(),      // DEFAULT_SPACES
                dto.getProdBrndCtryCd(),     // DEFAULT_SPACES
                dto.getHostPlatformNo(),
                dto.getPmtCpnMicrNo(),

                // 17–18: more zeros
                dto.getInterfaceCntlNo(),    // DEFAULT_ZERO
                dto.getAcctBillingTpNo(),    // DEFAULT_ZERO

                // 19: real field
                dto.getGlDestNo(),

                // 20–21: more blanks
                dto.getLegacyBinIn(),        // DEFAULT_SPACES
                dto.getAccountingNo(),       // DEFAULT_SPACES

                // no placeholder for EXTRACT_DT (CURRENT TIMESTAMP)

                // 22: finally the WHERE key
                dto.getBankIdNo()
            };

            jdbcTemplate.update(
                PoeBinSQLFactory.UPDATE_BIN,
                updateParams
            );

        } else {
            // ----- INSERT PATH -----
            Object[] insertParams = new Object[] {
                // 1: your key
                dto.getBankIdNo(),

                // 2–6: fixed‐date stamps + blanks + zeroes
                dto.getBinEffTs(),           // DEFAULT_BIN_EFF_TS
                dto.getBinExprTs(),          // DEFAULT_BIN_EXPR_TS
                dto.getBinAprvIn(),          // DEFAULT_SPACES
                dto.getPrinBnkNoLenCt(),     // DEFAULT_ZERO
                dto.getAcsmedNoLenCt(),      // DEFAULT_ZERO

                // no placeholder for LAST_UPDATE_TS

                // 7–8: blanks
                dto.getMbnaOwnershipIn(),    // DEFAULT_SPACES
                dto.getMbnaTechIn(),         // DEFAULT_SPACES

                // 9–16: your real fields
                dto.getHostNo(),
                dto.getIssuerNo(),
                dto.getProdBrndNo(),
                dto.getBusLineTpNo(),
                dto.getProdBrndRgnCd(),      // DEFAULT_SPACES
                dto.getProdBrndCtryCd(),     // DEFAULT_SPACES
                dto.getHostPlatformNo(),
                dto.getPmtCpnMicrNo(),

                // 17–18: zeros
                dto.getInterfaceCntlNo(),    // DEFAULT_ZERO
                dto.getAcctBillingTpNo(),    // DEFAULT_ZERO

                // 19: real field
                dto.getGlDestNo(),

                // 20–21: blanks
                dto.getLegacyBinIn(),        // DEFAULT_SPACES
                dto.getAccountingNo()        // DEFAULT_SPACES

                // no placeholder for EXTRACT_DT
            };

            jdbcTemplate.update(
                PoeBinSQLFactory.INSERT_BIN,
                insertParams
            );
        }
    }
}
