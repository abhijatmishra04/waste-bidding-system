@Log4j2
@Component
public class CustaggProcessor
        implements ItemProcessor<CustaggRecordsDTO,CustaggProcessedRecordsDTO> {

    private static final ConcurrentMap<String,Boolean> GLOBAL_DEDUP_CACHE
            = new ConcurrentHashMap<>(1_000_000);

    private Map<String,String> entityMap;
    private long duplicatesSkipped;

    @BeforeStep
    @SuppressWarnings("unchecked")
    public void init(StepExecution step) {
        entityMap = (Map<String,String>)
                step.getJobExecution().getExecutionContext().get("entityMap");
        if (entityMap == null)
            throw new IllegalStateException("entityMap missing");
        log.info("Processor init – entityMap size={}", entityMap.size());
    }

    @Override
    public CustaggProcessedRecordsDTO process(CustaggRecordsDTO in) {

        String alpha = entityMap.get(in.getNumEntity());
        if (alpha == null) return null;

        String key = in.getProductCode()
                   + '#' + in.getNumEntity()
                   + '#' + in.getAccountNumber();

        if (GLOBAL_DEDUP_CACHE.putIfAbsent(key, Boolean.TRUE) != null) {
            duplicatesSkipped++;
            return null;
        }
        return new CustaggProcessedRecordsDTO(
                in.getProductCode(),
                in.getNumEntity(),
                alpha,
                in.getAccountNumber());
    }

    @AfterStep
    public void tearDown(StepExecution step) {
        step.getExecutionContext().putLong("dupSkipped", duplicatesSkipped);
        log.info("Step {} – duplicates skipped {}", step.getStepName(), duplicatesSkipped);
    }
}
