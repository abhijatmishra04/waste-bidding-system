
import java.nio.charset.StandardCharsets;
import java.util.Map;
import static java.util.Map.entry;

public final class FieldOffsetTable {

    private static final Map<String,int[]> OFFSETS = Map.<String,int[]>ofEntries(
        entry("CLS", new int[]{11,13}),
        entry("ILI", new int[]{11,13}),
        entry("PER", new int[]{12,12}),
        entry("SBA", new int[]{12,12}),
        entry("BUS", new int[]{12,12}),
        entry("CDS", new int[]{10,14}),
        entry("RAA", new int[]{10,14}),
        entry("ALB", new int[]{10,14}),
        entry("ALS", new int[]{10,14}),
        entry("ALI", new int[]{10,14}),
        entry("IHL", new int[]{10,14}),
        entry("DCL", new int[]{10,14}),
        entry("RAP", new int[]{9,15}),
        entry("DCA", new int[]{8,16}),
        entry("CCA", new int[]{8,16}),
        entry("INV", new int[]{15,9}),
        entry("ILA", new int[]{15,9}),
        entry("IDS", new int[]{14,10}),
        entry("MLA", new int[]{14,10}),
        entry("IML", new int[]{14,10}),
        entry("SDA", new int[]{14,10}),
        entry("DDA", new int[]{14,10}),
        entry("AID", new int[]{9,12})
    );

    private static final int[] DEFAULT_SLICE = new int[]{30,15};

    private FieldOffsetTable() { /* no instances */ }

    /**
     * @return { offset, length } for the given productCode
     */
    public static int[] lookup(String productCode) {
        return OFFSETS.getOrDefault(productCode, DEFAULT_SLICE);
    }

    /**
     * Extracts the accountNumber out of the raw RECORD_SIZE byte[]
     */
    public static String extractAccountNumber(String productCode, byte[] record) {
        int[] slice = lookup(productCode);
        return new String(record, slice[0], slice[1], StandardCharsets.UTF_8).trim();
    }
}
