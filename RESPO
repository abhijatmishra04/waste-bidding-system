import static org.junit.Assert.*;

import org.junit.Before;
import org.junit.Test;
import java.math.BigDecimal;

public class UdapRequestPaymentInfoProcessorTest {

    private UdapRequestPaymentInfoProcessor processor;

    @Before
    public void setUp() {
        processor = new UdapRequestPaymentInfoProcessor();
    }

    @Test
    public void testProcess_RemStmtBal_Success() throws Exception {
        UdapRequestPaymentInfoDTO dto = new UdapRequestPaymentInfoDTO();
        dto.setRecurAmtType(UdapRequestBatchConstants.CASE_REM_STMT_BAL);
        dto.setPmtAmt(new BigDecimal("100.00"));

        UdapRequestPaymentInfoDTO result = processor.process(dto);

        assertNotNull(result);
        assertEquals(UdapRequestBatchConstants.SST_REM_STMT_BAL_ONETIME, result.getPaymentType());
        assertEquals(new BigDecimal("100.00"), result.getOrigPaymentAmt());
        assertEquals(UdapRequestBatchConstants.AMT_TYPE_RSB, result.getAmtType());
    }

    @Test
    public void testProcess_RemStmtBal_NullPmtAmt() throws Exception {
        UdapRequestPaymentInfoDTO dto = new UdapRequestPaymentInfoDTO();
        dto.setRecurAmtType(UdapRequestBatchConstants.CASE_REM_STMT_BAL);
        dto.setPmtAmt(null);

        UdapRequestPaymentInfoDTO result = processor.process(dto);

        assertNull(result);
    }

    @Test
    public void testProcess_ISB_Success() throws Exception {
        UdapRequestPaymentInfoDTO dto = new UdapRequestPaymentInfoDTO();
        dto.setRecurAmtType(UdapRequestBatchConstants.CASE_ISB);
        dto.setProcessCode(UdapRequestBatchConstants.PROCESS_CODE_P00);
        dto.setMinStmtCrtRegAmt(new BigDecimal("200.00"));

        UdapRequestPaymentInfoDTO result = processor.process(dto);

        assertNotNull(result);
        assertEquals(UdapRequestBatchConstants.SST_ONETIME_ISB, result.getPaymentType());
        assertEquals(new BigDecimal("200.00"), result.getOrigPaymentAmt());
        assertEquals(UdapRequestBatchConstants.AMT_TYPE_ISB, result.getAmtType());
    }

    @Test
    public void testProcess_ISB_NullProcessCode() throws Exception {
        UdapRequestPaymentInfoDTO dto = new UdapRequestPaymentInfoDTO();
        dto.setRecurAmtType(UdapRequestBatchConstants.CASE_ISB);
        dto.setProcessCode(null);

        UdapRequestPaymentInfoDTO result = processor.process(dto);

        assertNull(result);
    }

    @Test
    public void testProcess_ISB_NullMinStmtCrtRegAmt() throws Exception {
        UdapRequestPaymentInfoDTO dto = new UdapRequestPaymentInfoDTO();
        dto.setRecurAmtType(UdapRequestBatchConstants.CASE_ISB);
        dto.setProcessCode(UdapRequestBatchConstants.PROCESS_CODE_P00);
        dto.setMinStmtCrtRegAmt(null);

        UdapRequestPaymentInfoDTO result = processor.process(dto);

        assertNull(result);
    }

    @Test
    public void testProcess_RemIsb_Success() throws Exception {
        UdapRequestPaymentInfoDTO dto = new UdapRequestPaymentInfoDTO();
        dto.setRecurAmtType(UdapRequestBatchConstants.CASE_REM_ISB);
        dto.setPmtAmt(new BigDecimal("300.00"));

        UdapRequestPaymentInfoDTO result = processor.process(dto);

        assertNotNull(result);
        assertEquals(UdapRequestBatchConstants.SST_REM_ISB, result.getPaymentType());
        assertEquals(new BigDecimal("300.00"), result.getOrigPaymentAmt());
        assertEquals(UdapRequestBatchConstants.AMT_TYPE_RIS, result.getAmtType());
    }

    @Test
    public void testProcess_RemIsb_NullPmtAmt() throws Exception {
        UdapRequestPaymentInfoDTO dto = new UdapRequestPaymentInfoDTO();
        dto.setRecurAmtType(UdapRequestBatchConstants.CASE_REM_ISB);
        dto.setPmtAmt(null);

        UdapRequestPaymentInfoDTO result = processor.process(dto);

        assertNull(result);
    }
}
