import static org.junit.Assert.*;
import static org.mockito.Mockito.*;

import org.junit.Before;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.MockitoAnnotations;
import org.mockito.junit.MockitoJUnitRunner;
import org.springframework.batch.core.Job;
import org.springframework.batch.core.Step;
import org.springframework.batch.core.job.builder.JobBuilder;
import org.springframework.batch.core.repository.JobRepository;
import org.springframework.batch.core.step.builder.StepBuilder;
import org.springframework.batch.core.step.builder.StepBuilderHelper;
import org.springframework.core.task.TaskExecutor;

@RunWith(MockitoJUnitRunner.class)
public class CustaggBatchConfigurationTest {

    @InjectMocks
    private CustaggBatchConfiguration batchConfig;

    @Mock
    private JobBuilder jobBuilder;

    @Mock
    private StepBuilder stepBuilder;

    @Mock
    private TaskExecutor taskExecutor;

    @Mock
    private JobRepository jobRepository;

    @Mock
    private Step processCustaggFileStep;

    @Mock
    private Step fileValidatorStep;

    @Mock
    private CustaggFilePartitioner custaggFilePartitioner;

    @Before
    public void setUp() {
        MockitoAnnotations.initMocks(this);
    }

    // ðŸ”¹ Test: Ensure `custaggJob()` returns a valid Job
    @Test
    public void testCustaggJob_ReturnsJob() {
        Job job = batchConfig.custaggJob();
        assertNotNull("custaggJob() should return a valid Job", job);
    }

    // ðŸ”¹ Test: Ensure `custaggStep()` returns a valid Step
    @Test
    public void testCustaggStep_ReturnsStep() {
        Step step = batchConfig.custaggStep();
        assertNotNull("custaggStep() should return a valid Step", step);
    }

    // ðŸ”¹ Test: Ensure `processCustaggFileStep()` returns a valid Step
    @Test
    public void testProcessCustaggFileStep_ReturnsStep() {
        Step step = batchConfig.processCustaggFileStep();
        assertNotNull("processCustaggFileStep() should return a valid Step", step);
    }

    // ðŸ”¹ Test: Ensure `fileValidatorStep()` returns a valid Step
    @Test
    public void testFileValidatorStep_ReturnsStep() {
        Step step = batchConfig.fileValidatorStep();
        assertNotNull("fileValidatorStep() should return a valid Step", step);
    }
}
