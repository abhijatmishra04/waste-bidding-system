private void updateTransferInstructionM2M(List<String> transferInstructionIds) {
    if (transferInstructionIds == null || transferInstructionIds.isEmpty()) {
        Log.info("No Transfer Instruction IDs provided for update.");
        return;
    }

    try {
        String sql = CustaggSQLFactory.UPDATE_TRANSFER_INSTRUCTION_M2M;
        jdbcTemplate.batchUpdate(
            sql,
            transferInstructionIds,
            transferInstructionIds.size(),
            (ps, transferInstrId) -> ps.setString(1, transferInstrId)
        );

        Log.info("Successfully updated Transfer Instruction M2M for IDs: {}", transferInstructionIds);
    } catch (Exception e) {
        Log.error("Error updating Transfer Instruction M2M for IDs: {}", transferInstructionIds, e);
    }
}


private List<String> fetchTransferInstructionIds(List<String> scheduleIds) {
    List<String> transferInstructionIds = new ArrayList<>();
    if (scheduleIds == null || scheduleIds.isEmpty()) {
        Log.info("No Schedule IDs provided for fetching Transfer Instruction IDs.");
        return transferInstructionIds;
    }

    try {
        // Convert list to array for IN clause
        String sql = CustaggSQLFactory.FETCH_TRANSFER_INSTRUCTION_ID;
        transferInstructionIds = jdbcTemplate.query(
            sql,
            ps -> {
                ps.setArray(1, scheduleIds.toArray(new String[0]));
            },
            (rs, rowNum) -> rs.getString("xfer_instr_id")
        );

        Log.info("Fetched Transfer Instruction IDs: {}", transferInstructionIds);
    } catch (Exception e) {
        Log.error("Error fetching Transfer Instruction IDs for Schedule IDs: {}", scheduleIds, e);
    }

    return transferInstructionIds;
}
