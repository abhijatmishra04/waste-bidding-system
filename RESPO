Precondition
To fetch the data:

Join Logic: Join the account_boa table with the schedule_m2m table using schd.dr_acc_id.
The following conditions must be satisfied:
The account number (acc.acc_no) in the account_boa table matches the account number from the reference entity and reference data file.
The entity code (acc.ent_cd) in the account_boa table matches the entity code from the reference entity and reference data file.
The product code (acc.prod_cd) in the account_boa table matches the product code from the reference entity and reference data file.
The schedule status (schd.schd_stat) is S01, which indicates that the account is active.
The transfer reference ID (schd.xfer_ref_id) is NULL, which means no transfer is associated with the schedule.

Description
The query retrieves the schedule IDs (schd.schd_id) of accounts from the account_boa table that match the following conditions:

The entity code (ent_code), product code (prod_code), and account number (acc_no) match the corresponding fields in the reference entity and reference data file.
The status code (schd.schd_stat) of the schedule is S01, indicating that the account is active.
The transfer reference ID (schd.xfer_ref_id) is NULL, meaning no transfer is associated with the schedule



Description
The query retrieves the schedule IDs (schd.schd_id) of accounts from the account_m2m table that meet the following conditions:

The account number (acc.acc_no), entity code (ent_code), and product code (prod_code) match the values from the reference entity and reference data file.
The schedule status (schd.schd_stat) is S01, indicating that the account is active.
The transfer reference ID (schd.xfer_ref_id) is NULL, meaning no transfer is associated with the schedule.
This query is part of the custagg batch job.

Precondition
To fetch the data:

Join Logic: Join the account_m2m table with the schedule_m2m table using schd.cr_acc_id.
Ensure the following conditions:
The account number (acc.acc_no) in the account_m2m table matches the account number from the reference entity and reference data file.
The entity code (acc.ent_cd) in the account_m2m table matches the entity code from the reference entity and reference data file.
The product code (acc.prod_cd) in the account_m2m table matches the product code from the reference entity and reference data file.
The schedule status (schd.schd_stat) is S01, indicating that the account is active.
The transfer reference ID (schd.xfer_ref_id) is NULL, meaning no transfer is associated with the schedule.



Description
The query retrieves the xfer_exeq_m2m_id from the transfer_execution_m2m table by joining it with the transfer_instruction_m2m table. The data is fetched for records where the action indicator (act_indct) is not equal to 'F', which means the payment is not failed and is either in progress or successful.

Precondition
To fetch the xfer_exeq_m2m_id, the following conditions must be satisfied:

Join the transfer_execution_m2m table (temm) with the transfer_instruction_m2m table (timm) on the field timm.xfer_instr_id = temm.xfer_instr_id.
Ensure that:
The schedule ID (timm.schd_id) matches the provided schedule ID.
The action indicator (temm.act_indct) is not equal to 'F', indicating the payment is not failed.



Description
This query retrieves the transfer instruction ID (xfer_instr_id) from the transfer_instruction_m2m table for a specific schd_id, which was fetched in earlier queries. The transfer instruction must meet the following conditions:

It is not already processed (i.e., its xfer_instr_id is not present in the transfer_execution_m2m table).
Its schd_stat belongs to one of the following statuses: 'H03', 'H05', 'H06', 'H07', which likely represent specific states requiring retries.
It is associated with the given schd_id.
It retrieves the oldest instruction based on the creation timestamp (creat_ts).
This query is part of the retry logic for unprocessed transfer instructions and ensures only the earliest unprocessed instruction for the given schedule is selected for processing.

Precondition
To execute this query:

Use the schd_id fetched from the earlier queries on account_m2m or account_boa tables.
Ensure the following:
The xfer_instr_id does not exist in the transfer_execution_m2m table, indicating it hasnâ€™t been processed yet.
The schd_stat of the transfer instruction is one of the following: 'H03', 'H05', 'H06', 'H07'.
The schd_id matches the one fetched earlier.
Sort the eligible transfer instructions by the creation timestamp (creat_ts) and fetch only the earliest instruction (i.e., the first row).


