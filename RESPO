private String fetchScheduleIdUsingAccountBoa(String accountNumber, String numEntity, String productCode) {
    try {
        Log.info("Executing query to fetch Schedule ID from Account_BOA for AccountNumber: {}, NumEntity: {}, ProductCode: {}",
            accountNumber, numEntity, productCode);
        
        return jdbcTemplate.queryForObject(
            CustaggSQLFactory.FETCH_SCHEDULE_ID_ACCOUNT_BOA,
            new Object[]{accountNumber, numEntity, productCode},
            String.class
        );
    } catch (EmptyResultDataAccessException e) {
        Log.warn("No Schedule ID found in Account_BOA for AccountNumber: {}, NumEntity: {}, ProductCode: {}. Exception: {}",
            accountNumber, numEntity, productCode, e.getMessage());
        return null;
    } catch (DataAccessException e) {
        Log.error("Database access error while fetching Schedule ID from Account_BOA for AccountNumber: {}, NumEntity: {}, ProductCode: {}. Exception: {}",
            accountNumber, numEntity, productCode, e.getMessage(), e);
        return null;
    } catch (Exception e) {
        Log.error("Unexpected error while fetching Schedule ID from Account_BOA for AccountNumber: {}, NumEntity: {}, ProductCode: {}. Exception: {}",
            accountNumber, numEntity, productCode, e.getMessage(), e);
        return null;
    }
}

private String fetchScheduleIdUsingAccountM2M(String accountNumber, String numEntity, String productCode) {
    try {
        Log.info("Executing query to fetch Schedule ID from Account_M2M for AccountNumber: {}, NumEntity: {}, ProductCode: {}",
            accountNumber, numEntity, productCode);
        
        return jdbcTemplate.queryForObject(
            CustaggSQLFactory.FETCH_SCHEDULE_ID_ACCOUNT_M2M,
            new Object[]{accountNumber, numEntity, productCode},
            String.class
        );
    } catch (EmptyResultDataAccessException e) {
        Log.warn("No Schedule ID found in Account_M2M for AccountNumber: {}, NumEntity: {}, ProductCode: {}. Exception: {}",
            accountNumber, numEntity, productCode, e.getMessage());
        return null;
    } catch (DataAccessException e) {
        Log.error("Database access error while fetching Schedule ID from Account_M2M for AccountNumber: {}, NumEntity: {}, ProductCode: {}. Exception: {}",
            accountNumber, numEntity, productCode, e.getMessage(), e);
        return null;
    } catch (Exception e) {
        Log.error("Unexpected error while fetching Schedule ID from Account_M2M for AccountNumber: {}, NumEntity: {}, ProductCode: {}. Exception: {}",
            accountNumber, numEntity, productCode, e.getMessage(), e);
        return null;
    }
}
