try {
    JobParameters jobParameters = new JobParametersBuilder()
            .addLong("startAt", System.currentTimeMillis())
            .toJobParameters();

    JobExecution jobExecution = jobLauncher.run(job, jobParameters);

    jobResponse.setJobName(jobExecution.getJobInstance().getJobName());
    jobResponse.setJobLaunchStatus(BatchCommonConstants.SST_BATCH_JOB_SUCCESS_STATUS);
    jobResponse.setJobStausMessage("Job Launched Successfully");
    jobResponse.setJobExecutionId(jobExecution.getId().toString());

    logger.info("Job Launched successfully with jobId: {} - jobName: {}", 
                jobExecution.getId().toString(), jobName);

    return jobResponse;

} catch (JobExecutionAlreadyRunningException |
         JobRestartException |
         JobInstanceAlreadyCompleteException |
         JobParametersInvalidException exception) {

    // ✅ Single place to handle known exceptions
    logger.error("Job execution failed: {}", exception.getMessage(), exception);

    // ✅ Set appropriate status based on exception type
    if (exception instanceof JobExecutionAlreadyRunningException) {
        return setJobErrorResponse(jobResponse, exception, BatchCommonConstants.JOB_EXEC_ALREADY_RUNNING);
    } else if (exception instanceof JobRestartException) {
        return setJobErrorResponse(jobResponse, exception, BatchCommonConstants.JOB_RESTART_EXCEPTION);
    } else if (exception instanceof JobInstanceAlreadyCompleteException) {
        return setJobErrorResponse(jobResponse, exception, BatchCommonConstants.JOB_INSTANCE_COMPLETED_EXCEPTION);
    } else if (exception instanceof JobParametersInvalidException) {
        return setJobErrorResponse(jobResponse, exception, BatchCommonConstants.INVALID_JOB_PARAM);
    }
    
} catch (Exception exception) {
    // ✅ Catch any unknown or generic exceptions separately
    logger.error("Unknown error occurred: {}", exception.getMessage(), exception);
    return setJobErrorResponse(jobResponse, exception, BatchCommonConstants.GENERAL_EXCEPTION_OCCURRED);
}
